<resources>
    <string name="app_name">LM IT School Samsung</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="topic_1">Язык Java зародился как часть проекта создания передового программного обеспечения (ПО) для различных бытовых приборов.
        Реализация проекта была начата на языке С++, но вскоре возник ряд проблем, наилучшим средством борьбы с которыми было изменение самого инструмента - языка программирования. Стало очевидным, что необходим платформо-независимый язык программирования, позволяющий создавать программы, которые не приходилось бы компилировать отдельно для каждой архитектуры и можно было бы использовать на различных процессорах под различными операционными системами.
        Рождению языка Java предшествовала довольно интересная история.
        В 1990 году разработчик ПО компании Sun Microsystems Патрик Нотон
        в команде из шести человек приступил к разработке нового объектно-ориентированного языка
        программирования, который был назван Oak (дуб), в честь дерева, росшего под окном Гослинга.
        В 1991 вышал первая версия языка под названием Oak.
        23 мая 1995 год - дата официального выпуска под названием Java.
        С 2009 года язык Java сменил своего владельца –  компания Sun Microsystems была куплена компанией Oracle. </string>
    <string name="topic_2">Все типы данных в Java разделяются на два класса — примитивные и ссылки на объекты.
        На этом занятии  рассмотрим   только примитивные типы. Примитивные типы в Java не являются объектно-ориентированными,
        они аналогичны простым типам большинства традиционных языков программирования.
        В Java имеется восемь простых типов: — byte, short, int, long, char, float, double и boolean. Их можно разделить на четыре группы:
        Целые. К ним относятся типы byte, short, int и long. Эти типы предназначены для целых чисел со знаком.
        Типы с плавающей точкой — float и double. Они служат для представления чисел, имеющих дробную часть.
        Символьный тип char. Этот тип предназначен для представления элементов из таблицы символов, например, букв или цифр.
        Логический тип boolean. Это специальный тип, используемый для представления логических величин.
 </string>
    <string name="topic_3">Одним из фундаментальных элементов многих языков программирования являются условные конструкции.
        Данные конструкции позволяют направить работу программы по одному из путей в зависимости от определенных условий.
        В языке Java используются следующие условные конструкции: if..else и switch..case
        После ключевого слова if ставится условие. И если это условие выполняется, то срабатывает код, который помещен в далее в блоке if
        после фигурных скобок.
        В качестве условий выступает операция сравнения двух чисел.
        Так как, в данном случае первое число больше второго, то выражение num1 > num2 истинно и возвращает значение true.
        Следовательно, управление переходит в блок кода после фигурных скобок и начинает выполнять содержащиеся там инструкции.
        После ключевого слова if следует условие в круглых скобках. Как и во многих других языках условие может быть реализовано:
        1. В полной форме:
        if (условие) Действия 1
        else Действия 2
        2. В краткой форме:
        if (условие) Действия 1

</string>
    <string name="topic_4"> Массив представляет набор однотипных значений. Объявление массива похоже на объявление обычной переменной,
        которая хранит одиночное значение, причем есть два способа объявления массива:
        тип_данных название_массива[];
        тип_данных[] название_массива;
        Например, определим массив чисел:
        int nums[];
        int[] nums2;
        Также можно сразу при объявлении массива инициализировать его:
        int nums[] = new int[4];    // массив из 4 чисел
        int[] nums2 = new int[5];   // массив из 5 чисел
        При подобной инициализации все элементы массива имеют значение по умолчанию.
        Например, для типа int значением по умолчанию является число 0, поэтому выше определенный массив nums будет состоять из четырех нулей.
    </string>
    <string name="topic_5"> </string>
    <string name="topic_6"> </string>
    <string name="topic_7"> </string>
    <string name="topic_8"> </string>
    <string name="topic_9"> </string>
    <string name="topic_10"> </string>


</resources>